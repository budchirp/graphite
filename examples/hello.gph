extern printf(str: string) -> void
extern print_number(number: i32) -> void

extern add(a: i32, b: i32) -> i32

# comment
fn main(argc: i32, argv: string[]) -> i32 {
  printf(argv[argc - 1])

  printf("\nStart\n")

  printf("\nArray\n")
  var array = [123, 234, 345, 456, 567]

  for (var mut i = 0; i < 5; i++) {
    print_number(array[i])
  }

  printf("\nAdding numbers\n")
  var x: i32 = add(32, 32)
  var y: i32 = (x * 1)
  print_number(y)

  printf("\nFor loop\n")
  for (var mut i: i32 = 10; i > 0; i--) {
    print_number(i)
  }

  printf("\nVar without initializer\n")
  var j: i32
  j = y
  print_number(j)

  printf("\nVar without initializer - pointer\n")
  var k: *i32
  k = &y
  print_number(*k)

  printf("\nWhile loop\n")
  var mut i: i32 = 0;
  while (i < 10) {
    print_number(i)
    i++
  }

  printf("\nBoolean check\n")
  var z: boolean = if (x == y) { true } else { false }
  print_number(z as i32)

  if (z) {
    printf("x and y is 64\n")
  } else {
    printf("x and y is not 64\n")
  }

  printf("End\n")

  return (10 - 10) * 10
}
